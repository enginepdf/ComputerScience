```decimal.js

let sum=0;

for (let i=0; i<100; i++){
    sum+=0.1;
}

console.log(sum); // 9.99999999999998 !== 10(=100*0.1)

````

// 8=2^3
// 4=2^2
// 2=2^1
// 1=2^0
// 0.5=2^(-1)
// 0.25=2^(-2)
// 0.125=2^(-3)
// 0.0625=2^(-4)
// 0.03125=2^(-5)
// 0.015625=2^(-6)

// 0.3 === 0.25 + 0.05 --> 0.01 + 0.00001 + 0.000001 + ... 

// * Fixed Point(고정 소수점)

//     실수 표현을 32bit으로 근사
//     부호 1bit, 정수 16bit, 소수 15bit --> 32bit
//     정수 표현 bit를 늘리면 큰 숫자 표현 가능 <-> 소수 표현 bit  늘리면 정밀 숫자 표현 가능

// * Floating Point(부동 소수점)

//     부호 1bit, 지수 8bit, 가수 23bit --> 32bit
//     256 --> [1.0 * 2^8](2)