// reference : http://softwarepatrasche.blogspot.com/2016/04/blog-post.html
// https://github.com/JaeYeopHan/Interview_Question_for_Beginner/tree/master/Network
// https://asfirstalways.tistory.com/356

UDP(User Datagram Protocol) : 비연결형 프로토콜. 흐름제어, 오류제어 또는 손상된 세그먼트의 수신에 대한 재전송을 하지 않음. 포트들을 사용하여 IP 프로토콜에 인터페이스 제공
                              DNS가 UDP 사용. 

TCP(Transmission Control Protocol) : 신뢰성이 없는 인터넷을 통해 종단간에 신뢰성 있는 바이트 스트림을 전송하도록 설계. 
                                     송신자와 수신자 모두가 소켓이라고 부르는 종단점을 생성함으로써 이루어짐. 연결 설정은 3-way handshake을 사용

TCP/IP 계층
*  IP : 단말과 단말 간 패킷을 전송하기 위해 각 단말은 4바이트 IP주소가 필요. IP ADRESS <-> DNS
*  TCP : 서버와 클라이언트 간 데이터를 ‘신뢰성’ 있게 전달하기 위해 만들어짐. 패킷의 손실을 교정하고 순서를 재조합 한다. 연결 지향 : 전송측과 수신측의 전송 선로인 Session을 만든다.
-      Layer 4. Application Layer ( OSI : application, presentation / HTTP ) : FTP/Telnet/SMTP등으로 이루어진 응용프로그램
-      Layer 3. Transport Layer ( OSI : session, transport / TCP ) : 각 시스템을 연결하고, TCP 프로토콜을 이용해 데이터를 전송하는 계층.
-      Layer 2. Internet Layer ( OSI : network, datalink / IP ) : 데이터를 정의 및 경로 배정(라우팅). 정확히 라우팅 하기 위해 IP프로토콜을 사용한다.
-      Layer 1. Physical Layer ( OSI : physical / Ethernet ) : 이더넷 카드와 같은 하드웨어를 말함.



*** 3-way handshake

SYN(SYnchronize sequence Number)
ACK(ACKnowledgement)

* 연결 성립(Connection Establishment)

클라이언트는 서버에 접속 요청하는 SYN(a) 패킷(헤더 - 수신처의 인터넷 주소와 순서, 데이터, 테일러 - 에러 정보)을 보낸다.
서버는 클라이언트의 요청인 SYN(a)을 받고 클라이언트에게 요청을 수락한다는 ACK(a+1)와 SYN(b)이 설정된 패킷을 발송(클라이언트가 서버 응답을 체크하기 위한 SYN(b))
클라이언트는 서버의 수락 응답인 ACK(a+1)와 SYN(b) 패킷을 받고 ACK(b+1)를 서버로 보내면 연결이 성립(establish)된다.



