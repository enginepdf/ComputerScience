// reference : http://softwarepatrasche.blogspot.com/2016/04/blog-post.html
// https://croute.me/419
// https://hahahoho5915.tistory.com/32

** HTTP의 Connectionless, Stateless의 특징 때문에 쿠키와 세션 사용

쿠키 : 웹 환경에서 사용자의 정보 저장에 http 헤더에 포함시켜 전송(트래픽 낭비), 보안 취약, 4KB 저장 용량으로 크기가 작다., 같은 사이트 내에서 둘 이상의 탭을 열면, 둘 이상의 트랜젝션 추적에 어려움
      클라이언트에 저장, text 형식, 하나의 도메인 당 20개, 세션보다 빠름
      ex) 방문했던 사이트에 재방문 시 아이디, 비밀번호 자동 입력

세션 : 웹 서버에 저장됨(세션 쿠키), Object 형식, 서버 허용하는 한 용량 제한 없음, 쿠키보다 보안 좋음
      각 클라이언트에 고유 Session ID 부여(방문자가 웹 서버에 접속해 있는 상태를 하나의 단위로 보고 그것을 세션이라 부름)
      사용자 정보를 서버에 두어 쿠키보다 보안에 좋지만, 사용자가 많아질수록 서버 메모리 많이 차지
      동시 접속자 수가 많은 웹사이트의 경우 서버에 과부하

      클라이언트는 서버 접속 시 세션 ID를 발급 받고, 쿠키를 사용해서 저장.
      서버 요청 시, 이 쿠키의 세션 ID를 서버에 전달
      서버는 세션 ID로 세션에 있는 클라이언트 정보 가져오고 응답
      ex) 화면이 이동해도 로그인이 풀리지 않고 로그아웃하기 전까지 유지


웹 스토리지 : 크기 제한 없고, 서버로 보내지 않음, 유효기간 없다, key/value
    로컬 스토리지 : 도메인마다 따로 생성, 지속 기간 제한 없다. 여러 창을 켜도 같은 도메인이라면, 같은 스토리지 사용.
    세션 스토리지 : 도메인 별, 윈도우 별 따로 생성, 윈도우(세션)와 같은 범위와 생존기간을 가짐, 각 세션마다 새로운 스토리지 사용하고 폐기