// reference : http://softwarepatrasche.blogspot.com/2016/04/blog-post.html
// https://kkamagistory.tistory.com/205
// https://github.com/WooVictory/Ready-For-Tech-Interview/blob/master/Network/OSI%207%20%EA%B3%84%EC%B8%B5.md
// http://www.ktword.co.kr/abbr_view.php?m_temp1=379
// https://velog.io/@hidaehyunlee/%EB%8D%B0%EC%9D%B4%ED%84%B0%EA%B0%80-%EC%A0%84%EB%8B%AC%EB%90%98%EB%8A%94-%EC%9B%90%EB%A6%AC-OSI-7%EA%B3%84%EC%B8%B5-%EB%AA%A8%EB%8D%B8%EA%B3%BC-TCPIP-%EB%AA%A8%EB%8D%B8
// https://sigmasabjil.tistory.com/37
// http://www.ktword.co.kr/abbr_view.php?m_temp1=873
// https://stackoverflow.com/questions/52775730/tcp-port-and-osi-model
// https://m.blog.naver.com/chlalsdud61/220744988172
// https://m.blog.naver.com/PostView.nhn?blogId=sung_mk1919&logNo=221177021021&proxyReferer=https:%2F%2Fwww.google.com%2F
// https://parksb.github.io/article/36.html


* 프로토콜의 필요성

   한 클라이언트에서 발생한 데이터가 상대방 컴퓨터 혹은 서버로 전달되기 위해서는 표준화 된 어떠한 약속 혹은 절차를 따라야 함.
   보내는 쪽에서는 데이터를 안전하고, 정확하고, 신속하게 규격화하는 방법이 필요,
   받는 쪽에서는 그 데이터를 안전, 정확, 신속하게 해석하는 방법이 필요 --> 이런 기술적 약속을 프로토콜이라고 함
   (컴퓨터 간 데이터를 주고 받을 때 에러 발생하지 않도록 알맞게 나누어 전송, 이를 수신하여 다시 기존 정보를 변환)


* 계층 구조

   네트워크 상에서 여러 대의 컴퓨터가 데이터 주고 받으려면 이들을 서로 연동할 수 있도록 표준화된 인터페이스 지원해야 함.
   OSI 7모델과 TCP/IP 모델 모두 계층 구조를  갖고 있음
   계층 구조를 사용하는 목적은 분할 정복(복잡한 문제를 나누어 쉽게 해결)
   계층 구조는 위, 아래 층으로만 이동하고 단계를 건너뛸 수 없으며, 다음 단계로 넘어가려면 이전 계층이 전제 조건


* 통신 분야에서의 캡슐화

   OSI 계층 모델에서 사용자 데이터가 각 계층을  지나면서 하위 계층은 상위 계층으로부터 온 정보를 데이터로 취급.
   자신의 계층 특성을 담은 제어 정보(주소, 에러 제어 등)를 헤더화시켜, 이를 붙이는 일련의 과정
   각 계층에서 추가된 특정한 프로토콜 제어 정보(PCI(Protocol Contorl Unit), 헤더)들을 통신의 상대측에서는 역순으로 제거하면서 응용 계층까지 도달
   데이터 캡슐화 : 단계별 헤더(Data -> Segment -> Datagram -> Frame)를 붙여 전송

   Ethernet Frame{Receiver's MAC address + Sender's MAC address, IP PACKET{Receiver's IP address + Sender's IP address, TCP Segment{TCP Protocol Port Number, DATA}}, FCS}
   
   FCS(Frame Check Sequence) : 프레임의 끝 부분에 수신측의 에러 검출을 돕기 위해 삽입하는 필드 - CRC 에러 검출 기법에 의해 생성된 비트 배열이 이에 포함됨
                               수신 측은 자신이 갖고 있은 FCS와 전송되어온 프레임의 FCS와 비교하여 에러 여부 확인
                               에러 확인 시 해당 프레임을 폐기하고 송신측에 재전송 요구
                               Ethernet LAN 카드에서 FCS 처리. 상위 계층에 프레임을 넘겨줄 때는 이를 제외(MAC 헤더 + 데이터만 넘김)

* OSI(Open Systems Interconnection Reference Model) 7 계층 모델

   네트워크 통신 과정을 7개 계층으로 구분한 산업 표준 참조 모델
   초창기 네트워크는 각 컴퓨터마다 시스템이 달라 하드웨어, 소프트웨어의 논리적 변경 없이 통신할 수 있는 표준 모델이 나타남
   각 계층은 하위 계층의 기능만을 이용, 상위 계층에게 기능 제공
   실제 사용되는 인터넷 프로토콜은 7계층 구조를 완전히 따르지는 않음. Internet Protocol Stack은 현재 대부분 TCP/IP 다름(데이터 정확성 확인은 TCP, 패킷을 목적지까지 전송하는  일은 IP가 담당)
   TCP/IP의 응용 계층(=OSI 5,6,7 계층), 전송 계층(=OSI 4계층), 인터넷 계층(=OSI 3계층), 네트워크 인터페이스 계층(=OSI 1,2계층)

   PDU(Process Data Unit) : 각 계층에서 전송되는 단위, PDU=SDU(Service Data Unit, 상위 계층에서 전달받은 데이터) + PCI(Protocol Control Unit, 헤더 정보, 발신/수신지 주소, 오류검출용 FCS 등)
                            2계층 - Frame, 3계층 - Packet, 4계층 - Segment

   * 데이터 전달 과정

      (sender)
      서버 애플리케이션은 만든 데이터를 전송 계층에 전달
      전송 계층은 받은 애플리케이션 데이터를 TCP/UDP 세그먼트에 넣어 네트워크 계층에 전달
      네트워크 계층은 받은 세그먼트를 IP 패킷에 추가하여 데이터 링크 계층으로 전달
      데이터 링크 계층은 이더넷 프레임에 넣어 물리 계층으로 전달
      물리 계층은 받은 프레임을 비트로 변환 후 전기신호나 광신호로 만들어 보냄

      (receiver)
      하위 계층에서부터 상위계층으로 역캡슐화를 하여 원래의 애플리케이션 데이터로 만듬
      물리 계층에서 전기신호나 광신호를 받으면 비트로 변환 후 프레임으로 만들어 데이터 링크에 전달
      데이터 링크 계층은 프레임에서 패킷을 꺼내 네트워크 계층으로 전달
      네트워크 계층은 받은 패킷에서 세그먼트를 꺼내 전송 계층에 전달
      전송 계층은 받은 세그먼트에서 데이터를 꺼내 애플리케이션에 전달

   * 계층

         계층 7 : 응용 계층(Application Layer) - DATA(메시지)

            Message format, Human-Machine Interfaces
            프로토콜 : DHCP, DNS, FTP, HTTP, Telnet, SSH
            최종 목적지로 애플리케이션마다 서비스 제공 방법 규정
            일반적 응용 서비스는 관련된 응용 프로세스들의 사이의 전환 제공
            사용자 인터페이스, 전자우편, 데이터베이스 관리 등의 서비스 제공
         
         계층 6 : 표현 계층(Presentation Layer) - DATA

            Coding into 1s and 0s; encryption, compression
            프로토콜 : JPG, MPEG, SMB, AFP
            코드 간의 번역 담당. 사용자 시스템에서 데이터의 형식 상 차이를 다루는 부담을 응용 계층으로부터 덜어 줌
            압축(전송할 비트 수의 감소를 위해 압축 알고리즘 사용), MIME 인코딩, 암호화 등의 동작이 이루어짐(받은 데이터를 표준방식으로 변환)
            (파일 인코딩, 명령어를 포장, 압축, 암호화)
            데이터 표현에 대한 독립성 제공

         계층 5 : 세션 계층(Session Layer) - DATA

            Authentication, permissions, session restoration
            프로토콜 : NetBIOS, SSL(Secure Socket Layer), TLS(Transport Layer Secure)
            양 끝단의 응용 프로세스가 통신을 관리하기 위한 방법 제공(네트워크를 이용하여 통신하는 두 프로세스 간의 논리적 연결)
            동시 송수신 방식(duplex), 반이중 방식(half-duplex), 전이중 방식(full duplex)의 통신과 함께, 체크 포인팅과 유휴, 종료, 다시 시작 과정 등을 수행. TCP/IP 세션을 만들고 없애는 책임을 짐
            통신하는 사용자들을 동기화하고 오류 복구 명령들을 일괄적으로 다룸
            체크 포인팅, 유휴, 종료, 다시 시작 과정 등 수행
            응용 간 논리적 연결 확립
            TCP/IP 세션을 만들고 없앰
            세션 구별번호의 추가
            Transport Layer에서 정의된 포트를 사용해서 소켓, 세션 만듬(OSI layer 5 'session layer' uses the ports defined in layer 4 to create sockets and sessions between communicating devices/programs/etc.)
      
         계층 4 : 전송 계층(Transport Layer) - Segment(캡슐화), (TCP(DATA))  --> 패킷 전달 순서가 달라도 재조립 가능해야 함(패킷 순서번호의 추가), TCP window size, TCP congestion control(부하가 심할 때 라우터가 패킷 버림)
                                                                            TCP/IP illustrated
            End-to-end error control
            PDU : Segment(헤더에 포함)
            프로토콜 : TCP, UDP, ARP, RTP 
            장비 : 게이트웨이, L4 스위치
            양 끝단의 사용자들이 신뢰성 있는 데이터를 주고 받을 수 있도록 해주어, 상위 계층들이 데이터 전달의 유효성이나 효율성 생각하지 않도록 해줌
            패킷들의 전송이 유효한지 확인하고 전송 실패한 패킷들을 다시 전송(오류 검출 및 복구와 흐름 제어)
            일부 프로토콜은 상태 개념 있고(stateful), 연결 기반(connection oriented)
            패킷 순서번호의 추가, 주소 설정, 오류 및 흐름 제어,  다중화
            TCP, UDP 프로토콜을 통해 통신 활성화. 포트를 열어두고, 프로그램들이 전송 할 수 있도록 제공
            TCP(신뢰성, 연결 지향적), UDP(비신뢰성, 비연결성, 실시간)
            UDP(순서 상관 없음, 방송 송출 등에 사용)  --> reliable UDP(rUDP)(신뢰성 추가)
            포트 설정, Port(0~65535) - 어떤 프로그램으로 가야 할지 지정

         계층 3 : 네트워크 계층(Network Layer) - Packet(데이터그램)(캡슐화), IP((TCP(DATA)))   --> IP 신뢰성/연결성/순서 보장 없음 -> 전송 계층의 필요성, LAN 간 연결(라우터 이용 통신), 스타링크(위성), TTL(Time To Live)

            Network addressing; routing or switching
            PDU : Packet(전송 데이터는 패킷 단위로 분할하여 전송 후 다시 합쳐짐)
            프로토콜 : IP(TCP/IP 망에서 원하는 목적지까지 데이터 전달 위해 만들어진 표준), ICMP
            장비 : 라우터, L3 스위치
            여러 개의 노드 거칠 때마다 경로 찾아주는 역할, 송신 노드에서 수신 노드로 어떤 경로를 정보를 전달할 것인지 결정. 최적 경로 설정
            (전송 계층이 요구하는 서비스 품질(QoS) 제공 위한 기능적, 절차적 수단 제공)
            라우터를 통해 이동할 경로를 선택하여 네트워크 관리자가 IP 주소 할당, 해당 경로에 따라 패킷 전달
            데이터를 다른 네트워크를 통해 전달함으로써 인터넷이 가능하게 만드는 계층
            송수신 주소, 가상 회선 번호 추가
            라우팅, 흐름 제어, segmentation/desegmentation, 오류 제어, internetworking 등 수행
            * 데이터그램 : 패킷 교환에서 각각 독립적으로 취급되는 패킷. 헤더와 데이터 부분으로 구성

         계층 2 : 데이터 링크 계층(Data Link Layer) - Frame(캡슐화), Ethernet(IP((TCP(DATA))))   - ring network, switch,    wireshark mac address filter -  물리 계층 에러 확인, LAN 범위에서 장치 간 통신 위함

            Error detection, flow control on physical link
            PDU : Frame(시스템 간 오류 없는 데이터 전송을 위해 팻킷을 프레임으로 구성), 3계층에서 정보를 받아 주소와 제어정보를 헤더와 테일에 추가, 노드 대 노드 전달 감독
            프로토콜 : 이더넷, MAC, PPP, ATM, LAN, Wifi
            장비 : 브릿지, 스위치
            네트워크 위의 개체들(인접 기기) 간 데이터 전달.
            물리 계층에서 발생할 수 있는 오류 찾고(정전기 등의 이유) 수정하는 데 필요한 기능적, 절차적 수단 제공(CRC(Cyclic Reduncdancy Check) 기반의 오류 제어와 흐름 제어 필요)
            MAC 주소를 이용해 통신(주소값을 물리적으로 할당)
            프레임 순서번호의 추가
            Frame에 MAC 주소를 부여하고 에러 검출, 재전송, 흐름 제어 진행
            
            스위치(flooding, learning, forwarding, aging, filtering)
            ARP(Address Resolution Protocol) : IP 주소를 MAC 주소로 변환
            RARP(Reverse Address Resolution Protocol) : MAC 주소를 IP 주소로 변환


         계층 1 : 물리 계층(Physical Layer) - Bit(캡슐화)   --> Ethernet Cable(CSMA/CD), 구리선(양끝), 8 가닥 선, submarine cable, 충돌

            Bit stream: physical medium, method of representing bits
            PDU : 비트(bit)
            프로토콜 : Modem, Cable, Fiber, RS-232C, Wifi  
            장비 : 허브, 리피터, 케이블
            실제 장치 연결 위한 전기적, 물리적 세부 사항 정의
            통신 케이블로 데이터 전송하는 역할(디지털 비트를 전기, 무선 또는 광신호로 변환)
            핀들의 배치, 전압, 전선의 명세
            허브나 리피터가 물리 계층의 장치
            물리적 정보 전달 매개체에 대한 연결의 성립 및 종료. 여러 사용자들 간의 통신 자원을 효율적 분배하는 데 관여
            물리 계층에서 데이터 교환하는 방식은 회선 교환, 메시지 교환, 패킷 교환 방식
            에러 제어 비트 추가

* 허브

   리피터와 마찬가지로 전기적 신호를 증폭시켜 LAN의 전송거리 연장. 여러 대의 장비를 LAN에 접속할 수 있도록 함
   한 장비에서 전송된 데이터 프레임을 허브로 연결된 모든 장비에게 다 전송(flooding), 수신한 프레임을 모든 포트로 flooding --> 충돌 발생 가능, 보안성 떨어짐
   half duplex로만 동작하여 이더넷 프레임의 충돌이 발생 가능성 높고, 네트워크 성능 떨어짐


* 스위치

   허브의 확장된 개념. 전송 중 패킷의 충돌이 일어나지 않도록 패킷의 목적지로 지정할 포트를 직접 전송
   스위치에서 패킷의 목적지 주소를 기준으로 보내는 곳과 받는 곳을 계산하여 해당 포트로 1:1 연결(Switching)
   두 개의 노드가 통신을 하는 동안 다른 노드들도 서로 간의 통신 동시 가능, 이더넷에서 높은 효율 갖음
   노드 수 증가해도 속도 저하 없음. 패킷 감청 어려운 구조라서 보안성 높음
   기본적으로 Processor, RAM, OS 탑재하여 많은 부가 기능 갖음
   브릿지와 스위치는 MAC 주소와 포트 번호가 기록된 MAC address table을 가지고 있어, 목적지 MAC 주소를  가진 장비가 연결된 포트로만 프레임 전송
   스위치의  프레임 목적지 MAC 주소가 브로드캐스트일 때, 수신한  프레임을 모든 포트로 전송(flooding), PC에서 사용되는 많은 통신용 프로토콜들이 브로드캐스트 프레임 사용하여 스위치 접속 장비가 많아질수록 브로드캐스트 트래픽 증가, 네트워크 성능 저하
      --> 동일 스위치라도 VLAN이 다르면 브로드캐스트 프레임이 차단되어 브로드캐스트 프레임의 flooding으로 인한 성능 저하와 보안성 문제를 해결할 수 있음

   Layer 2 스위치 : MAC 주소 이용한 스위칭, Layer 3 스위치 : 프로토콜 주소 이용한 스위칭, Layer 4 스위치 : 세션 프로토콜 이용한 스위칭

      L2 스위치 - MAC 주소 이용

         흔히 볼 수 있는 스위칭 방식, 저렴함
         패킷의 MAC 주소를 읽어 스위칭, OSI 계층 중 2 계층에 해당하는 MAC이라서 Layer 2 스위치라고 함
         Broadcast 패킷에 의해 성능 저하 발생(라우팅 불가), 상위 레이어 프로토콜을 이용한 스위칭 발가능

      L3 스위치 - 프로토콜 주소 이용

         포트간 패킷 스위칭을 위해 패킷의 IP, IPX 주소를 읽어 스위칭, 통신 경로 한 번만 설정
         기본적으로 스위치 자체에 IP 주소 할당
         각 포트별 IP 주소 할당 내역 등 설정하여 스위칭 할 때 설정된 값 이용
         Broadcast 트래픽으로 인한 전체 성능 저하를 막을 수 있다.
         특정 프로토콜을 이용해야 스위칭 가능
         전통적인 라우터 속도 한계 극복, VLAN 간의 고속 라우팅을 위해 라우팅 기능을 가진 스위치 사용하는 경우 많음
         동일 VLAN 포트 간에는 스위칭 기능 제공. 서로 다른 VLAN 포트 간에는 라우팅 기능 제공

      L4 스위치 - 세션 프로토콜 이용

         L3 스위치와 같이 프로토콜 기반, 어플리케이션별 우선 순위를 두어 스위칭
         로드 밸런싱 기능 제공
         L3 스위치에서 가상 랜 기능, 그룹화, 부하 분산 등의 고급 설정 포함
         TCP/IP 프로토콜 기반 동작하는 것이 대부분. 포트 번호를 이용한 스위칭까지도 가능
         포트 번호는 수신 컴퓨터에서 IP 패킷의 형태로 결정하여 상위 계층으로 전달
         보안성 높고 고급 스위칭 설정 가능
         프로토콜 의존적, 설정 복잡, 고가의 장비로 L2, L3 스위치와 적절한 혼합 배치 필요


* 브릿지

   스위치, 허브와 마찬가지로 이더넷 장비 물리적 연결. 프레임의 전송거리 연장.
   단순히 전기적 신호를 증폭시키는 것이 아니라 프레임을 다시 만들어 전송
   허브와 달리 L2 주소인 이더넷의 MAC 주소를 보고 프레임 전송 포트를 결정하여 L2 장비라고 함(스위치가 브릿지를 대체하여 사용되지 않음)
      

* 라우터

   라우터와 L3 스위치는 IP 주소 등 Layer 3에 있는 주소를 참조하여 목적지와 연결되는 포트로 패킷을 전송 - L3 장비
   서브넷이 다른 IP 주소를 가진 장비 간에 통신이 이루어지려면 반드시 L3 장비 거쳐야 한다.
   스위치는 멀티캐스트, 브로드캐스트 및 목적지를 모르는 유니캐스트  프레임을 수신하면 수신 포트를 제외한 모든 포트로 flooding. L3 장비들은 이런 프레임 모두 차단

   네트워크  주소가 서로 다른 장비들을 연결할 때 사용. 원격지에 위치한 네트워크들을 연결하는 경우, 장거리 전송이 가능한 이더넷 기술 발달로 원격지의 LAN을 스위치를 이용하여 직접 연결
   서브넷이 다른 장비들을 연결
   요즈음 LAN에서 VLAN 사용하는 경우가 많고, VLAN 간의 라우팅을 위해 L3 장비 필요.
   동일 VLAN에 소속된 장비들끼리 통신할 때는 라우터 필요 없겠지만, VLAN이 다른 장비들 간의 통신은 L3 스위치, 라우터 등의 L3 장비 통해야만 가능
   VLAN 간의 라우팅 위해 일반적인 라우터 사용하여 라우터에서 병목현상 발생하여 전체 네트워크 성능 저하시킬 수 있어 L3 스위치 사용


